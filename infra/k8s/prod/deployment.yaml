apiVersion: v1
kind: Namespace
metadata:
  name: scholarship-prod
  labels:
    environment: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scholarship-backend
  namespace: scholarship-prod
  labels:
    app: scholarship-backend
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: scholarship-backend
  template:
    metadata:
      labels:
        app: scholarship-backend
    spec:
      containers:
      - name: backend
        image: scholarship-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: scholarship-secrets
              key: database-url
        - name: REDIS_URL
          value: "redis://scholarship-redis:6379/0"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: scholarship-secrets
              key: jwt-secret
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "4"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: scholarship-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scholarship-frontend
  namespace: scholarship-prod
  labels:
    app: scholarship-frontend
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: scholarship-frontend
  template:
    metadata:
      labels:
        app: scholarship-frontend
    spec:
      containers:
      - name: frontend
        image: scholarship-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.scholarship.edu.tw/api/v1"
        - name: NODE_ENV
          value: "production"
        - name: NEXT_TELEMETRY_DISABLED
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: scholarship-frontend
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scholarship-postgres
  namespace: scholarship-prod
  labels:
    app: scholarship-postgres
    environment: production
spec:
  serviceName: scholarship-postgres
  replicas: 1
  selector:
    matchLabels:
      app: scholarship-postgres
  template:
    metadata:
      labels:
        app: scholarship-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "scholarship_prod"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: scholarship-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: scholarship-secrets
              key: postgres-password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=md5"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
          readOnly: true
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          fsGroup: 999
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scholarship-redis
  namespace: scholarship-prod
  labels:
    app: scholarship-redis
    environment: production
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: scholarship-redis
  template:
    metadata:
      labels:
        app: scholarship-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - /etc/redis/redis.conf
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
          readOnly: true
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: scholarship-backend
  namespace: scholarship-prod
  labels:
    app: scholarship-backend
spec:
  selector:
    app: scholarship-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: scholarship-frontend
  namespace: scholarship-prod
  labels:
    app: scholarship-frontend
spec:
  selector:
    app: scholarship-frontend
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: scholarship-postgres
  namespace: scholarship-prod
  labels:
    app: scholarship-postgres
spec:
  selector:
    app: scholarship-postgres
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: scholarship-redis
  namespace: scholarship-prod
  labels:
    app: scholarship-redis
spec:
  selector:
    app: scholarship-redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scholarship-backend
  namespace: scholarship-prod
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scholarship-frontend
  namespace: scholarship-prod
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: scholarship-prod
data:
  postgresql.conf: |
    # Performance settings
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Connection settings
    max_connections = 200
    
    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'pg_log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_statement = 'error'
    log_min_error_statement = error
    log_min_messages = warning
    log_min_duration_statement = 1000
    
    # Security
    ssl = off
    password_encryption = md5
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: scholarship-prod
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    
    # Memory
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    
    # Performance
    timeout 300
    tcp-keepalive 300
    
    # Logging
    loglevel notice
    
    # Security
    protected-mode yes
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Performance tuning
    hz 10
    dynamic-hz yes 