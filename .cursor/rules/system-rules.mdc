---
description: 
globs: 
alwaysApply: true
---
# Scholarship System Core Standards

## Project Overview
Scholarship application and approval management system with FastAPI + PostgreSQL + Next.js 15 + TypeScript.

## Technology Stack
- **Backend**: Python 3.11, FastAPI, SQLAlchemy 2.0, PostgreSQL 15, asyncpg, MinIO
- **Frontend**: Next.js 15, React 18, TypeScript, Tailwind CSS, shadcn/ui
- **Testing**: pytest (backend), Playwright (E2E), Jest (frontend unit tests)
- **Deployment**: Docker, Kubernetes, NGINX

## Naming Conventions (Critical)

### Backend (Python/FastAPI)
- Variables/functions: `camelCase` (e.g., `getUserById`, `studentData`)
- Classes: `PascalCase` (e.g., `StudentModel`, `ApplicationService`)
- Constants: `UPPER_SNAKE_CASE` (e.g., `MAX_FILE_SIZE`)
- API endpoints: `/camelCase` (e.g., `/getApplications`, `/updateStudentInfo`)
- Database tables: `snake_case` (e.g., `student_applications`)
- Database fields: `snake_case` (e.g., `created_at`, `student_id`)

### Frontend (TypeScript/React)
- Components: `PascalCase` (e.g., `StudentPortal`, `ApplicationForm`)
- Variables/functions: `camelCase` (e.g., `handleSubmit`, `applicationData`)
- Types/interfaces: `PascalCase` (e.g., `StudentType`, `ApplicationProps`)
- File names: `kebab-case` (e.g., `student-portal.tsx`)
- Directory names: `lowercase` or `kebab-case`

## Code Quality Standards

### Testing Requirements
- **Coverage Target**: 90%
- Test file naming: `test_*.py` (backend), `*.test.tsx` (frontend), `*.spec.ts` (E2E)
- Always include unit tests for business logic
- Integration tests for API endpoints
- E2E tests for critical user flows

### Documentation
- FastAPI endpoints require detailed docstrings
- React components use JSDoc comments with props examples
- Include type definitions and usage examples

## Docker Testing Standards (CRITICAL)
- **ALWAYS use Docker for testing - DO NOT modify local environment**
- All system testing in isolated Docker containers
- Use `./test-docker.sh` for testing operations
- Ensure ports 3000, 8000, 5432, 6379, 9000, 9001 are available
- Never run local services on these ports during Docker testing

## Performance Standards
- API response time: p95 < 600ms
- Use async/await for database operations
- Implement Redis caching with 10-minute TTL
- Component lazy loading and image optimization

## Security Requirements
- JWT authentication with RBAC
- Pydantic validation (backend), Zod + React Hook Form (frontend)
- File upload restrictions: type, size, virus scanning
- Environment-specific configurations

## Special Considerations
- **Multi-language support**: Chinese-English switching (Student pages only)
- **GPA validation**: Detailed testing required
- **OCR functionality**: Accuracy monitoring needed
- **Approval workflow**: Complete state management required

Target launch: 2025-07-03
